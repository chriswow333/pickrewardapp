syntax = "proto3";


option go_package = "pickrewardapi/api/evaluation/proto";
// option java_multiple_files = true;
// option java_package = "io.grpc.examples.helloworld";
// option java_outer_classname = "HelloWorldProto";

package evaluation_v1;

// The greeting service definition.
service Evaluation {
  // rpc EvaluateRespByOwnerID(EventReq) returns (EvaluationEventResultRespReply){}
  // rpc GetEvaluationRespByOwnerID(OwnerIDReq) returns (EvaluationRespReply){}
}



message Reply {
  int32 status = 1;
  Error error = 2;
}


message Error {
  int32 errorCode = 1;
  string errorMessage = 2;
}


message EventReq {

  message ChannelWithLabelEvent{
    string channelID = 1;
    repeated int32 channelLabels = 2;
  }

  message ChannelEvent {
    repeated ChannelWithLabelEvent channelsWithLabelEvents = 1;
    repeated int32 channelLabels = 2;
  }

  message CardEvent {
    int32 rewardType = 1;
    bool cardRewardTaskLabelPass = 2;
    repeated int32 cardRewardTaskLabels = 3;
  }

  message PayEvent {
    bool pass = 1;
    repeated string payIDs = 2;
  }

  string ownerID = 1;
  int64 eventDate = 2;
  int32 cost = 3;
  ChannelEvent channelEvent = 4;
  PayEvent payEvent = 5;
  CardEvent cardEvent = 6;

}



message EvaluationEventResultRespReply {


  message FeedbackEventResultResp {
    int32 rewardType = 1;
    int32 calculateType = 2;
    int32 cost = 3;
    double getReturn = 4;
    double getPercentage = 5;
    int32 feedbackEventResultStatus = 6; 
  }
  

  message EvaluationEventResultResp{
    string id = 1;
    FeedbackEventResultResp feedbackEventResultResp = 2;
  
  }

  Reply reply = 1;
  EvaluationEventResultResp evaluationEventResultResp = 2;
}



message OwnerIDReq{
  string ownerID = 1;
}




message EvaluationRespReply{

  Reply reply = 1;
  EvaluationResp evaluationResp = 2;
}

message EvaluationResp {

  string id = 1;
  repeated ChannelCategoryType channelCategoryTypes = 2;
  repeated ChannelEvaluationResp channelEvaluationResps = 3;
  PayEvaluationResp payEvaluationResp = 4;
  TaskEvaluationResp taskEvaluationResp = 5;
  ConstraintsEvaluationResp constraintsEvaluationResp = 6;
  LabelEvaluationResp labelEvaluationResp = 7;
}


message ChannelCategoryType {
  int32 categoryType = 1;
  string name = 2;
  int32 order = 3;
}

message ChannelEvaluationResp {

  message Channel {


    string id = 1;
    string name = 2;
    string image = 3;
    string linkURL = 4;
    repeated string descriptions = 5;
    int32 channelCategoryType = 6;
    int64 createDate = 7;
    int64 updateDate = 8;
    int32 order = 9;
    int32  channelStatus = 10;
  }


  int32 channelCategoryType = 1;
  repeated Channel matches = 2;
  repeated Channel misMatches = 3;

}

message PayEvaluationResp {
  message Pay {
    string id = 1;
    string name = 2;
    string image = 3;
    repeated string descriptions = 4;
    string linkURL = 5;
    int64 createDate = 6;
    int64 updateDate = 7;
    int32 order = 8;
    int32 payStatus = 9;
  }

  repeated Pay matches = 1; 
  repeated Pay misMatches = 2;
}


message TaskEvaluationResp {
  message Task {
    message TaskDescription {
      string name = 1;
      repeated string desc = 2;
      int32 order = 3;
    }
    
    string id = 1;
    string name =2;
    repeated TaskDescription descriptions = 3;
    int32 taskOwner = 4;
    string taskOwnerID = 5;
    int64 createDate = 6;
    int64 updateDate = 7;
  }


  repeated Task matches = 1;
  repeated Task misMatches = 2;
}



message ConstraintsEvaluationResp {
    
  message Constraint {
    int32 constraintType = 1;
    string constraintName = 2;
    repeated int32 weekDays = 3;
  }

  repeated Constraint matches = 1;
  repeated Constraint misMatches = 2;

}

message LabelEvaluationResp {
  message Label {
    int32 labelType = 1;
    string labelName = 2;
  }

  repeated Label matches = 1;
  repeated Label misMatches = 2;
}

