syntax = "proto3";


option go_package = "pickrewardapi/api/channel/proto";
// option java_multiple_files = true;
// option java_package = "io.grpc.examples.helloworld";
// option java_outer_classname = "HelloWorldProto";

package channel;

// The greeting service definition.
service ChannelV1 {
  rpc GetChannelCategoryTypes (EmptyReq) returns (ChannelCategoryTypeReply){}
  rpc GetChannelsByChannelCategoryType (ChannelCategoryTypeReq) returns (ChannelReply){}
  rpc SearchChannel(SearchChannelReq) returns (SearchChannelReply) {}

}

message EmptyReq{}

message Reply {
  int32 status = 1;
  Error error = 2;
}


message Error {
  int32 errorCode = 1;
  string errorMessage = 2;
}


message ChannelCategoryTypeReq {
  int32 categoryType = 1;
  int32 limit = 2;
  int32 offset = 3;
}

message ChannelCategoryTypeReply{

  message ChannelCategoryType {
    int32 categoryType = 1;
    string name = 2;
    int32 order = 3;
  }
  
  Reply reply = 1;
  repeated ChannelCategoryType channelCategoryTypes = 2;

}


message ChannelReply {

  message Channel{
    string id = 1;
    string name = 2;
    string image = 3;
    string linkURL = 4;
    repeated string descriptions = 5;
    int32 channelCategoryType = 6;
    int64 createDate = 7;
    int64 updateDate = 8;
    repeated int32 labels = 9;
    int32 order = 10;
    int32 channelStatus = 11;
  }


  Reply reply = 1;
  repeated Channel channels = 2;
}




message SearchChannelReq{
  string keyword = 1;
}

message SearchChannelReply{
  message SearchChannel{
    message Channel {
      string id = 1;
      string name = 2;
      string image = 3;
      string linkURL = 4;
      repeated string descriptions = 5;
      int32 channelCategoryType = 6;
      int64 createDate = 7;
      int64 updateDate = 8;
      repeated int32 labels = 9;
      int32 order = 10;
      int32 channelStatus = 11;
    }
  
    message ChannelCategoryType {
      int32 categoryType = 1;
      string name = 2;
      int32 order = 3;
    }

    ChannelCategoryType channelCategoryType = 1;
    repeated Channel channels = 2;
  }

  Reply reply = 1;
  repeated SearchChannel searchChannels = 2;
}

